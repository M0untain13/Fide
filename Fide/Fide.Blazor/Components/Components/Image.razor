@using Fide.Blazor.Data;

@using Fide.Blazor.Services.FileStorage

@inject IFileStorage storage

<div class="image-frame @(_hasTwoImages ? "double-image" : "")">
    @if (url != null)
    {
        <div class="image-container">
            <img src="@url" alt="Main image" class="displayed-image" />
            @*
            @if (ImageData.SecondImageUrl != null)
            {
                <img src="@ImageData.SecondImageUrl" alt="Secondary image" class="displayed-image" />
            }
            *@
        </div>

        <div class="button-group">
            <button @onclick="DeleteImage" class="action-button delete-button">
                Удалить
            </button>
            <button @onclick="AnalyzeImage" class="action-button analyze-button">
                Анализ
            </button>
        </div>
    }
    else
    {
        <div class="no-image">No image to display</div>
    }
</div>

@code {
    private string? url { get; set; }

    [Parameter]
    public required ImageLink ImageLink { get; set; }

    [Parameter]
    public EventCallback<ImageLink> OnDelete { get; set; }

    [Parameter]
    public EventCallback<ImageLink> OnAnalyze { get; set; }

    private bool _hasTwoImages => false;

    private async Task DeleteImage()
    {
        await OnDelete.InvokeAsync(ImageLink);
    }

    private async Task AnalyzeImage()
    {
        await OnAnalyze.InvokeAsync(ImageLink);
    }

    protected override async Task OnInitializedAsync()
    {
        url = await storage.GeneratePresignedUrl(ImageLink.OriginalName, new TimeSpan(1, 0, 0));
        // TODO: костыль, который потом убрать!
        url = url.Replace("https", "http");
    }
}